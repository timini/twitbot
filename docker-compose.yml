app:
  image: node:7     ## node.js v4
  volumes:          ## adds app folder to the container
   - ./app:/app
   - ./data:/data
  links:            ## connects neo4j to app container
   - db
  #  - neo4j
  ports:            ## publish ports
   - "3000:3000"
  working_dir: /app         ## uses work dir /app
  entrypoint: npm start     ## starts application
  environment:
    - CONTAINERISED=1
    - "DEBUG=${DEBUG}"
    - "PG_USER=${PG_USER}"
    - "PG_PASS=${PG_PASS}"
    - "PG_HOST=${PG_HOST}"
    - "PG_DATABASE=${PG_DATABASE}"
    - "TWITTER_CONSUMER_KEY=${TWITTER_CONSUMER_KEY}"
    - "TWITTER_CONSUMER_SECRET=${TWITTER_CONSUMER_SECRET}"
    - "TWITTER_ACCESS_TOKEN=${TWITTER_ACCESS_TOKEN}"
    - "TWITTER_ACCESS_TOKEN_SECRET=${TWITTER_ACCESS_TOKEN_SECRET}"

db:
  image: postgres:9.6
  volumes:
    - ./db:/var/lib/postgresql
    - ./db/scripts:/docker-entrypoint-initdb.d/

# neo4j:
#   image: neo4j:3.0          ## we use neo4j v3
#   ports:                    ## publish ports to have Web UI
#    - "7474:7474"
#   volumes:                  ## adds folder with login/password
#    - ./neo4j/data:/data/dbms
